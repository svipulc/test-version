import {
  require_preview_api
} from "./chunk-6GFF2EK4.js";
import {
  require_global
} from "./chunk-DXIOBCSA.js";
import {
  __toESM
} from "./chunk-LK32TJAX.js";

// node_modules/@storybook/addon-a11y/dist/preview.mjs
var import_global = __toESM(require_global(), 1);
var import_preview_api = __toESM(require_preview_api(), 1);
var ADDON_ID = "storybook/a11y";
var RESULT = `${ADDON_ID}/result`;
var REQUEST = `${ADDON_ID}/request`;
var RUNNING = `${ADDON_ID}/running`;
var ERROR = `${ADDON_ID}/error`;
var MANUAL = `${ADDON_ID}/manual`;
var EVENTS = { RESULT, REQUEST, RUNNING, ERROR, MANUAL };
var { document } = import_global.global;
var channel = import_preview_api.addons.getChannel();
var active = false;
var activeStoryId;
var defaultParameters = { config: {}, options: {} };
var handleRequest = async (storyId, input) => {
  (input == null ? void 0 : input.manual) || await run(storyId, input ?? defaultParameters);
};
var run = async (storyId, input = defaultParameters) => {
  activeStoryId = storyId;
  try {
    if (!active) {
      active = true, channel.emit(EVENTS.RUNNING);
      let { default: axe } = await import("./axe-core.js"), { element = "#storybook-root", config, options = {} } = input, htmlElement = document.querySelector(element);
      if (!htmlElement) return;
      axe.reset(), config && axe.configure(config);
      let result = await axe.run(htmlElement, options), resultJson = JSON.parse(JSON.stringify(result));
      activeStoryId === storyId ? channel.emit(EVENTS.RESULT, resultJson) : (active = false, run(activeStoryId));
    }
  } catch (error) {
    channel.emit(EVENTS.ERROR, error);
  } finally {
    active = false;
  }
};
channel.on(EVENTS.REQUEST, handleRequest);
channel.on(EVENTS.MANUAL, run);
//# sourceMappingURL=@storybook_addon-a11y_preview.js.map
